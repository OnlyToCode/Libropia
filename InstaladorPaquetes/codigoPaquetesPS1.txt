# Habilita la salida de errores
$ErrorActionPreference = "Stop"

# Función para verificar si un comando está disponible
function Comando-Disponible {
    param ($comando)
    return ($null -ne (Get-Command $comando -ErrorAction SilentlyContinue))
}

# Verificar si Node.js está instalado
if (-not (Comando-Disponible "node")) {
    Write-Host "[ERROR] Node.js no está instalado. Descargándolo..." -ForegroundColor Red
    Start-Process "https://nodejs.org/"
    Write-Host "Instala Node.js manualmente y vuelve a ejecutar este script."
    Read-Host "Presiona ENTER para salir"
    Exit
} else {
    Write-Host "[OK] Node.js está instalado." -ForegroundColor Green
}

# Verificar si npm está disponible y corregir alias en PowerShell
if (-not (Comando-Disponible "npm")) {
    Write-Host "[ERROR] npm no está configurado correctamente. Corrigiéndolo..." -ForegroundColor Yellow
    Remove-Item alias:npm -Force -ErrorAction SilentlyContinue
}

# Buscar la ubicación correcta de npm
$NpmPath = (Get-Command npm.cmd -ErrorAction SilentlyContinue).Source
if (-not $NpmPath) {
    $NpmPath = "C:\Program Files\nodejs\npm.cmd"
}

# Verificar si npm funciona correctamente
try {
    $npmVersion = & $NpmPath -v 2>&1
    if ($LASTEXITCODE -ne 0) {
        throw "npm no responde correctamente."
    }
    Write-Host "[OK] npm está funcionando correctamente (v$npmVersion)." -ForegroundColor Green
} catch {
    Write-Host "[ERROR] npm tiene problemas. Intenta reinstalarlo manualmente." -ForegroundColor Red
    Read-Host "Presiona ENTER para salir"
    Exit
}

# Crear la carpeta de módulos globales si no existe
$globalModulesPath = & $NpmPath root -g
if (-not (Test-Path $globalModulesPath)) {
    Write-Host "[INFO] Creando la carpeta global de npm..." -ForegroundColor Yellow
    New-Item -ItemType Directory -Path $globalModulesPath -Force | Out-Null
}

# Lista de paquetes a instalar
$paquetes = @{
    "Next.js"     = "create-next-app"
    "React"       = "react"
    "TypeScript"  = "typescript"
    "Vue.js"      = "@vue/cli"
}

# Función para verificar e instalar paquetes globales de npm
function Instalar-Paquete {
    param ($nombre, $paquete)

    Write-Host "`nVerificando $nombre..."
    try {
        $salida = & $NpmPath list -g --depth=0 2>&1
        if ($salida -notmatch $paquete) {
            Write-Host "[INSTALANDO] $nombre..." -ForegroundColor Yellow
            & $NpmPath install -g $paquete --force
            if ($LASTEXITCODE -ne 0) {
                throw "[ERROR] No se pudo instalar $nombre."
            } else {
                Write-Host "[OK] $nombre instalado correctamente." -ForegroundColor Green
            }
        } else {
            Write-Host "[OK] $nombre ya está instalado." -ForegroundColor Green
        }
    } catch {
        Write-Host $_.Exception.Message -ForegroundColor Red
    }
}

# Instalar los paquetes
foreach ($nombre in $paquetes.Keys) {
    Instalar-Paquete $nombre $paquetes[$nombre]
}

Write-Host "`n=============================="
Write-Host "Instalación completada." -ForegroundColor Cyan
Read-Host "Presiona ENTER para salir"
